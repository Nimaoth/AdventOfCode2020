use import std.string
use import std.map
io :: import std.io
fmt :: import std.fmt

Main :: () {
    part_1()
    part_2()
}

part_1 :: () {
    mut last := Map[int, int].new()
    mut next_number := 0
    for 0..(2020-1) {
        last_number := if it_index < input.length {
            *input[it_index]
        } else {
            next_number
        }
        match last.get(last_number) {
            Some($num) -> {
                next_number = it_index - *num
            }
            None -> {
                next_number = 0
            }
        }
        last[last_number] = it_index
    }
    io.formatln("Part 1: {}", [next_number])
}

part_2 :: () {
    mut last := Map[int, int].new()
    last.adjust_capacity(10_000_000)
    mut next_number := 0
    for 0..(30000000-1) {
        last_number := if it_index < input.length {
            *input[it_index]
        } else {
            next_number
        }
        match last.get(last_number) {
            Some($num) -> {
                next_number = it_index - *num
            }
            None -> {
                next_number = 0
            }
        }
        last[last_number] = it_index
    }
    io.formatln("Part 1: {}", [next_number])
}

input := puzzle_input[..]

test_input0 := [0,3,6]
test_input1 := [1,3,2]
test_input2 := [2,1,3]
test_input3 := [1,2,3]
test_input4 := [2,3,1]
test_input5 := [3,2,1]
test_input6 := [3,1,2]

puzzle_input := [1,0,15,2,10,13]